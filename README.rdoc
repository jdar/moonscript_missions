= Lua Missions

The Moon Missions help you learn Moonscript-- a language which compiles one-to-one to lua.
The goal is to learn the language Moonscript, syntax, structure, some common
functions and libraries of the underlying language Lua, all through failing tests. 

== The Structure

The lessons are broken out into areas by file, strings are covered in strings.moon,
nil is covered in nil.moon, etc. They are presented in order in the missions.moon file.

Each mission builds up your knowledge of Moonscript and builds upon itself.  It will stop at
the first place you need to correct.

Some missions simply need to have the correct answer substituted for an incorrect one.
Some, however, require you to supply your own answer.  If you see the variable +__+ (a
double underscore) listed, it is a hint to you to supply your own code in order to
make it work correctly.

== Installing Moonscript

If you do not have Moonscript setup, please visit http://www.moonscript.org/ for
operating specific instructions. To check the installations simply type:

*nix platforms from any terminal window:

   [~] $ moon -v

Any response for Moonscript with a version number greater than 0.1.0 is fine.

== The Missions

In order to run de tests, you must execute the missions.lua file.

*nix platforms, from the lua_missions/missions directory:

    [moonscript_missions] $ cd missions
    [moonscript_missions/missions] $ lua missions.lua

=== Red, Green, Refactor

In test-driven development the process has always been, red, green, refactor.  Write a
failing test and run it (red), make the test pass (green), then refactor it (that is
look at the code and see if you can make it any better.  In this case you will need
to run the mission and see it fail (red), make the test pass (green), then take a
moment and reflect upon the test and improve the code to better communicate its intent (refactor).

The very first time you run it you will see the following output:

    [lua_missions] $ cd missions
    [lua_missions/missions] $ lua missions.lua
    (in /Users/person/dev/lua_missions)

    F

    *** Mission status ***

    asserts...........................................[Incomplete]
    test_assert: [fail]
    Assertion failed: Expected [false] to be [true]
    The error happened here:
      asserts.moon:3: in function <asserts.moon:2>
[LINENUMBERS IS CURRENTLY BROKEN]


It is telling you where to look for the first solution:

    Assertion failed: Expected [false] to be [true]
    The error happened here:
      asserts.moon:3: in function <asserts.moon:2>

We then open up the asserts.lua file and look at the first test:

    test_assert = ->
      assert_true false -- this should be true

We then change the +false+ to +true+ and run the test again. Ignore everything except
the method name (+test_assert+) and the parts inside the method (everything
before the +end+).

In this case the goal is for you to see that if you pass a value to the +assert+
method, it will either ensure it is +true+ and continue on, or fail if in fact
the statement is +false+.

== Inspiration

This is (currently) a direct port from the Lua Missions tutorial, which, in turn, was
heavily inspired by the Ruby Koans project:

http://rubykoans.com/

Go there and check it out, in case you are curious about ruby. Ruby is a great language and the Ruby Koans are a great way to learn it.


== Other Resources

Lua Missions by Enrique Garc√≠a ::  http://www.github.com/kikito/lua_missions
The Moonscript Language        ::  http://www.moonscript.org
The Lua Language               ::  http://www.lua.org
Programming in lua             ::  http://www.lua.org/pil
Lua-users wiki                 ::  http://lua-users.org/

= Other stuff

Author         :: Darius Roberts
Source & Issues:: http://www.github.com/jdar/moonscript_missions
Requires       :: Moonscript 0.1.0, which requires Lua 5.1 or later 
                 (optional: Rake for building up the files from source)

= License

http://i.creativecommons.org/l/by-nc-sa/3.0/88x31.png

moonscript_missions is released under a Creative Commons,
Attribution-NonCommercial-ShareAlike, Version 3.0
(http://creativecommons.org/licenses/by-nc-sa/3.0/) License.
